name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release (e.g., v0.1.1)"
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve TAG
        id: vars
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "TAG=${{ inputs.tag }}" >> "$GITHUB_OUTPUT"
          else
            echo "TAG=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          fi
          echo "Resolved TAG=${{ steps.vars.outputs.TAG }}"

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build backend
        run: |
          ./gradlew :backend:build
          mkdir -p dist/bundle/backend
          cp backend/build/libs/*-all.jar dist/bundle/backend/Moddex-Backend.jar || cp backend/build/libs/*.jar dist/bundle/backend/Moddex-Backend.jar

      - name: Build frontend
        run: |
          npm ci --prefix frontend
          npm run build --prefix frontend
          mkdir -p dist/bundle/frontend
          cp -r frontend/dist/* dist/bundle/frontend/

      - name: Copy packaging scripts
        run: |
          mkdir -p dist/bundle/scripts dist/bundle/packaging/systemd
          cp scripts/install.sh dist/bundle/scripts/
          cp scripts/uninstall.sh dist/bundle/scripts/
          cp packaging/systemd/moddex-backend.service dist/bundle/packaging/systemd/
          cp packaging/systemd/moddex-caddy.service dist/bundle/packaging/systemd/
          # Write VERSION file from tag
          echo "${{ steps.vars.outputs.TAG }}" > dist/bundle/VERSION

      - name: Create tarball
        id: tar
        run: |
          TAG="${{ steps.vars.outputs.TAG }}"
          NAME="moddex-${TAG}-linux-amd64.tar.gz"
          (cd dist && tar -czf "${NAME}" bundle)
          echo "name=${NAME}" >> "$GITHUB_OUTPUT"

      - name: Generate checksums
        run: |
          cd dist
          sha256sum "${{ steps.tar.outputs.name }}" > "${{ steps.tar.outputs.name }}.sha256"

      - name: Prepare helper scripts
        run: |
          cp scripts/download.sh dist/download.sh
          cp scripts/update.sh dist/update.sh
          (cd dist && sha256sum download.sh > download.sh.sha256)

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.TAG }}
          files: |
            dist/${{ steps.tar.outputs.name }}
            dist/${{ steps.tar.outputs.name }}.sha256
            dist/download.sh
            dist/download.sh.sha256
            dist/update.sh
